name: Django Rate Limiter CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11', '3.12']
        django-version: ['3.2', '4.1', '4.2', '5.0', '5.1']
        exclude:
          # Django 5.0+ requires Python 3.10+
          - python-version: 3.8
            django-version: '5.0'
          - python-version: 3.9
            django-version: '5.0'
          - python-version: 3.8
            django-version: '5.1'
          - python-version: 3.9
            django-version: '5.1'
          # Django 3.2 and 4.0 have distutils issues with Python 3.12
          - python-version: '3.12'
            django-version: '3.2'
          - python-version: '3.12'
            django-version: '4.0'

    services:
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install Django==${{ matrix.django-version }}
        pip install -r requirements.txt
        pip install pytest>=7.0.0 pytest-django>=4.5.0 pytest-cov>=4.0.0 redis>=4.0.0
        # Install setuptools for Python 3.12 compatibility
        if [[ "${{ matrix.python-version }}" == "3.12" ]]; then
          pip install setuptools
        fi

    - name: Install package
      run: |
        pip install -e .

    - name: Run tests
      env:
        DJANGO_SETTINGS_MODULE: tests.settings
      run: |
        python -m pytest tests/ -v --cov=django_rate_limiter --cov-report=xml --cov-report=term

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 mypy isort>=5.0.0

    - name: Run isort
      run: isort --check-only --profile black django_rate_limiter tests

    - name: Run flake8
      run: flake8 django_rate_limiter tests --max-line-length=88 --extend-ignore=E203,W503

    - name: Run mypy
      run: mypy django_rate_limiter --ignore-missing-imports

    - name: Run black
      run: black --check django_rate_limiter tests

  package:
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Check package
      run: twine check dist/*

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
